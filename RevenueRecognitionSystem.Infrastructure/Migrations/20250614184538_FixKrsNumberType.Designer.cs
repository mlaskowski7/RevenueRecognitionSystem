// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevenueRecognitionSystem.Infrastructure.Database;

#nullable disable

namespace RevenueRecognitionSystem.Infrastructure.Migrations
{
    [DbContext(typeof(RevenuesDbContext))]
    [Migration("20250614184538_FixKrsNumberType")]
    partial class FixKrsNumberType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ClientId");

                    b.ToTable("clients", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.CompanyClient", b =>
                {
                    b.HasBaseType("RevenueRecognitionSystem.Domain.Models.Client");

                    b.Property<string>("KrsNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("company_clients", (string)null);
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.IndividualClient", b =>
                {
                    b.HasBaseType("RevenueRecognitionSystem.Domain.Models.Client");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.ToTable("individual_clients", (string)null);
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.CompanyClient", b =>
                {
                    b.HasOne("RevenueRecognitionSystem.Domain.Models.Client", null)
                        .WithOne()
                        .HasForeignKey("RevenueRecognitionSystem.Domain.Models.CompanyClient", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Domain.Models.IndividualClient", b =>
                {
                    b.HasOne("RevenueRecognitionSystem.Domain.Models.Client", null)
                        .WithOne()
                        .HasForeignKey("RevenueRecognitionSystem.Domain.Models.IndividualClient", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
